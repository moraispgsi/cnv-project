/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
subprojects {
    apply plugin: "java"
    apply plugin: 'application'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:4+"
    }

    applicationDefaultJvmArgs = ['-XX:-UseSplitVerifier']

}

project(':server') {

    mainClassName = 'pt.ulisboa.tecnico.meic.cnv.WebServer'

    dependencies {
        compile project(':MazeRunner')
        compile project(':inst')
    }

    run {
        dependsOn(':inst:run')

        doFirst {
            //use classpath with .class instead of .jar

            def cp = []

            cp.add(sourceSets.main.output.classesDir)
            cp.add(sourceSets.main.output.resourcesDir)

            configurations.runtime.getAllDependencies().each { dep ->
                if (dep instanceof ProjectDependency) {
                    def depProj = dep.getDependencyProject()
                    def proj = project(depProj.path)
                    cp.add(proj.sourceSets.main.output.classesDir)
                    cp.add(proj.sourceSets.main.output.resourcesDir)
                }
                else
                    project.configurations.runtime.files(dep).each { file ->
                        cp.add(file)
                    }
            }

            classpath = files(cp)

        }

    }
}

project(':MazeRunner') {
    mainClassName = 'pt.ulisboa.tecnico.meic.cnv.MazeRunner'

}

project('inst') {

    mainClassName = 'ICount'

    //Instrumenting MazeRunner classes
    run {
        args = ['../MazeRunner/build/classes/java/main/pt/ulisboa/tecnico/meic/cnv/mazerunner/maze']
    }

    dependencies {
        runtime project(':MazeRunner')
    }

}

