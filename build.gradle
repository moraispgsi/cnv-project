plugins {
    id 'org.hidetake.ssh' version '2.9.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'



    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:4+"
        compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.313'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
        compile 'commons-codec:commons-codec:1.11'
    }

    applicationDefaultJvmArgs = ['-XX:-UseSplitVerifier']




    ssh.settings {
        knownHosts = allowAnyHosts //fix me maybe..
    }

    task deploy {
        dependsOn( ':'+ project.name +':distZip')
        doLast {
            ssh.run {
                session(remotes[project.name]) {
                    put from: 'build/distributions/' + project.name + '.zip', into: '/home/ec2-user/'
                    execute 'unzip -o /home/ec2-user/' + project.name + '.zip && rm /home/ec2-user/' + project.name + '.zip'
                    execute 'mkdir -p /home/ec2-user/.aws/'
                    put from: '../keypairs/credentials', into: '/home/ec2-user/.aws/'
                }
            }
        }
    }

}


project(':LoadBalancerAndAutoScaler') {
    mainClassName = 'pt.ulisboa.tecnico.meic.cnv.loadbalancer.WebServer'

    //Deploy to AWS
    remotes {
        LoadBalancerAndAutoScaler {
            host = '35.180.13.114'
            user = 'ec2-user'
            identity = file("../keypairs/loadbalancerAndAutoScalerKeypair.pem") //pem file on HOME DIR, or change me
        }
    }

    distZip {
        into('LoadBalancerAndAutoScaler') {
            from '..'
            include 'resources/*/*'
        }
    }
}


project(':server') {
    mainClassName = 'pt.ulisboa.tecnico.meic.cnv.WebServer'

    dependencies {
        compile project(':MazeRunner')
        compile project(':inst')
        compile project(":LoadBalancerAndAutoScaler")
    }


    //Deploy to AWS
    remotes {
        server {
            host = '35.180.6.2'
            user = 'ec2-user'
            identity = file("../keypairs/ec2InstanceKeyPair.pem") //pem file on HOME DIR, or change me
        }
    }

    distZip {
        into('server') {
            from '..'
            include 'resources/*/*'
        }
    }

}

project(':MazeRunner') {
    mainClassName = 'pt.ulisboa.tecnico.meic.cnv.MazeRunner'

    jar.dependsOn(':inst:run')
}

project('inst') {
    mainClassName = 'Instrumentation'

    dependencies {
        compile project(":LoadBalancerAndAutoScaler")
    }

    //Instrumenting MazeRunner classes
    run {
        dependsOn(':MazeRunner:compileJava')
        args = ['../MazeRunner/build/classes/java/main/pt/ulisboa/tecnico/meic/cnv/mazerunner/maze']
    }



}

